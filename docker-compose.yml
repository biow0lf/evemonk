version: "3.7"

volumes:
  postresql_data: {}
  redis_data: {}
  elasticsearch_data: {}
  ruby_bundle_cache: {}
  node_modules: {}

services:
  postgresql:
    image: "postgres:11.5"
    container_name: evemonk_postgresql
    restart: unless-stopped
    volumes:
      - "postresql_data:/var/lib/postgresql/data"
      - "./postgres:/docker-entrypoint-initdb.d"

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.4.0"
    container_name: evemonk_elasticsearch
    restart: unless-stopped
    volumes:
      - "elasticsearch_data:/usr/share/elasticsearch/data"
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms256M -Xmx256M"

  redis:
    image: "redis:5.0.6"
    container_name: evemonk_redis
    restart: unless-stopped
    volumes:
      - "redis_data:/data"

  memcached:
    image: "memcached:1.5.19"
    container_name: evemonk_memcached
    restart: unless-stopped
    command: memcached -m 64

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    stdin_open: true
    tty: true
    command: "bundle exec rails server -b 0.0.0.0"
    ports:
      - "3000:3000"
    depends_on:
      - postgresql
      - elasticsearch
      - redis
      - memcached
    volumes:
      - .:/app:cached
      - ruby_bundle_cache:/bundle
      - node_modules:/app/node_modules

  runner:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    stdin_open: true
    tty: true
    command: "/bin/bash"
    depends_on:
      - postgresql
      - elasticsearch
      - redis
      - memcached
    volumes:
      - .:/app:cached
      - ruby_bundle_cache:/bundle
      - node_modules:/app/node_modules
