swagger: '2.0'
info:
  title: EveMonk back-end API
  description: EveMonk back-end REST API documentation
  version: 1.0.0
  termsOfService: http://evemonk.com/terms
  contact:
    name: Igor Zubkov
    url: http://evemonk.com/support
    email: igor.zubkov@gmail.com
host: localhost:3000
schemes:
  - http
  - https
basePath: /api/v1
consumes:
  - application/json
  - application/x-www-form-urlencoded
produces:
  - application/json
tags:
  - name: sign up
    description: Sign up operations
  - name: sign in
    description: Sign in operations
  - name: sign out
    description: Sign out operations
  - name: sessions
    description: Session operations
  - name: api keys
    description: API Keys operations
  - name: profile
    description: Profile operations

paths:
  /sign_up:
    post:
      summary: Sign up
      description: Sign up endpoint.
      parameters:
        - name: email
          in: formData
          description: User email
          required: true
          type: string
        - name: password
          in: formData
          description: User password
          required: true
          type: string
          format: password
        - name: password_confirmation
          in: formData
          description: User password confirmation
          required: true
          type: string
          format: password
      tags:
        - sign up
      responses:
        '200':
          description: Account created
          schema:
            $ref: '#/definitions/OutputSession'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'

  /sign_in:
    post:
      summary: Get user session with auth token
      description: Signin user and return user session with auth token.
      parameters:
        - name: email
          in: formData
          description: User email
          required: true
          type: string
        - name: password
          in: formData
          description: User password
          required: true
          type: string
          format: password
        - name: name
          in: formData
          description: Session name
          required: false
          type: string
        - name: device
          in: formData
          required: false
          type: string
          enum:
            - ios
            - android
        - name: device_token
          in: formData
          required: false
          type: string
      tags:
        - sign in
      responses:
        '200':
          description: Response with session
          schema:
            $ref: '#/definitions/OutputSession'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'

  /sign_out:
    delete:
      summary: End session
      description: End session
      parameters:
        - name: Authorization
          in: header
          description: 'User auth token. Example: Bearer AAkoMiLatQHMngyuUU1vnh5b'
          default: Bearer ACCESS_TOKEN
          required: true
          type: string
      tags:
        - sign out
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized

  /sessions:
    get:
      summary: Get all user sessions
      description: Get all user sessions.
      parameters:
        - name: Authorization
          in: header
          description: 'User auth token. Example: Bearer AAkoMiLatQHMngyuUU1vnh5b'
          default: Bearer ACCESS_TOKEN
          required: true
          type: string
        - name: page
          in: query
          description: Page number for pagination
          type: integer
          format: int64
      tags:
        - sessions
      responses:
        '200':
          description: Response with sessions collection
          schema:
            $ref: '#/definitions/OutputSessionCollection'
        '401':
          description: Unauthorized

  /sessions/{id}:
    delete:
      summary: End session
      description: End session
      parameters:
        - name: Authorization
          in: header
          description: 'User auth token. Example: Bearer AAkoMiLatQHMngyuUU1vnh5b'
          default: Bearer ACCESS_TOKEN
          required: true
          type: string
        - name: id
          in: path
          description: Session ID
          required: true
          type: integer
          format: int64
      tags:
        - sessions
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Session not found

  /api_keys:
    get:
      summary: Get list of User API Keys
      description: |
        Get list of User API Keys.
      parameters:
        - name: Authorization
          in: header
          description: 'User auth token. Example: Bearer AAkoMiLatQHMngyuUU1vnh5b'
          default: Bearer ACCESS_TOKEN
          required: true
          type: string
        - name: page
          in: query
          description: Page number for pagination
          type: integer
          format: int64
      tags:
        - api keys
      responses:
        '200':
          description: API Keys collection
          schema:
            $ref: '#/definitions/OutputApiKeyCollection'
        '401':
          description: Unauthorized

    post:
      summary: Add EveOnline API Key
      description: |
        Create api key for user.
      parameters:
        - name: Authorization
          in: header
          description: 'User auth token. Example: Bearer AAkoMiLatQHMngyuUU1vnh5b'
          default: Bearer ACCESS_TOKEN
          required: true
          type: string
        - name: api_key[key_id]
          in: formData
          description: EveOnline API Key ID
          required: true
          type: string
        - name: api_key[v_code]
          in: formData
          description: EveOnline API Key code
          required: true
          type: string
      tags:
        - api keys
      responses:
        '200':
          description: API Key response
          schema:
            $ref: '#/definitions/OutputApiKey'
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'

  /api_keys/{id}:
    get:
      summary: Get EveOnline API Key
      description: |
        Get EveOnine API Key by ID.
      parameters:
        - name: Authorization
          in: header
          description: 'User auth token. Example: Bearer AAkoMiLatQHMngyuUU1vnh5b'
          default: Bearer ACCESS_TOKEN
          required: true
          type: string
        - name: id
          in: path
          description: API Key ID
          required: true
          type: integer
          format: int64
      tags:
        - api keys
      responses:
        '200':
          description: API Key response
          schema:
            $ref: '#/definitions/OutputApiKey'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: API Key not found

    delete:
      summary: Delete EveOnline API Key
      description: |
        Delete EveOnine API Key by ID.
      parameters:
        - name: Authorization
          in: header
          description: 'User auth token. Example: Bearer AAkoMiLatQHMngyuUU1vnh5b'
          default: Bearer ACCESS_TOKEN
          required: true
          type: string
        - name: id
          in: path
          description: API Key ID
          required: true
          type: integer
          format: int64
      tags:
        - api keys
      responses:
        '200':
          description: API Key removed
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: API Key not found

    put:
      summary: Update EveOnline API Key
      description: |
        Update EveOnine API Key by ID.
      parameters:
        - name: Authorization
          in: header
          description: 'User auth token. Example: Bearer AAkoMiLatQHMngyuUU1vnh5b'
          default: Bearer ACCESS_TOKEN
          required: true
          type: string
        - name: id
          in: path
          description: API Key ID
          required: true
          type: integer
          format: int64
        - name: api_key[key_id]
          in: formData
          description: EveOnline API Key ID
          required: true
          type: string
        - name: api_key[v_code]
          in: formData
          description: EveOnline API Key code
          required: true
          type: string
      tags:
        - api keys
      responses:
        '200':
          description: API Key response
          schema:
            $ref: '#/definitions/OutputApiKey'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: API Key not found
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'

    patch:
      summary: Update EveOnline API Key
      description: |
        Update EveOnine API Key by ID.
      parameters:
        - name: Authorization
          in: header
          description: 'User auth token. Example: Bearer AAkoMiLatQHMngyuUU1vnh5b'
          default: Bearer ACCESS_TOKEN
          required: true
          type: string
        - name: id
          in: path
          description: API Key ID
          required: true
          type: integer
          format: int64
        - name: api_key[key_id]
          in: formData
          description: EveOnline API Key ID
          required: false
          type: string
        - name: api_key[v_code]
          in: formData
          description: EveOnline API Key code
          required: false
          type: string
      tags:
        - api keys
      responses:
        '200':
          description: API Key response
          schema:
            $ref: '#/definitions/OutputApiKey'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: API Key not found
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'

  /profile:
    get:
      summary: Get current user profile
      description: Get current user profile
      parameters:
        - name: Authorization
          in: header
          description: 'User auth token. Example: Bearer AAkoMiLatQHMngyuUU1vnh5b'
          default: Bearer ACCESS_TOKEN
          required: true
          type: string
      tags:
        - profile
      responses:
        '200':
          description: Response with current user
          schema:
            $ref: '#/definitions/OutputUser'
        '401':
          description: Unauthorized

definitions:
  OutputUser:
    required:
      - id
      - email
      - created_at
      - updated_at
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: User ID
      email:
        type: string
        description: User email
      created_at:
        type: string
        description: Created at in ISO8601 format
      updated_at:
        type: string
        description: Updated at in ISO8601 format
    example:
      id: 42
      email: 'me@example.com'
      created_at: '2016-12-12T18:35:59Z'
      updated_at: '2016-12-12T18:36:10Z'

  OutputApiKey:
    required:
      - id
      - key_id
      - v_code
      - created_at
      - updated_at
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: APIKey ID
      key_id:
        type: integer
        format: int64
        description: APIKey Key ID
      v_code:
        type: string
        description: APIKey Code
      created_at:
        type: string
        description: Created at in ISO8601 format
      updated_at:
        type: string
        description: Updated at in ISO8601 format
    example:
      id: 123
      key_id: 1234567
      v_code: '4a66f384d27c59af02f16746d480689ee3674b58a0d822518eb57bddd4e904f7'
      created_at: '2016-12-12T18:35:59Z'
      updated_at: '2016-12-12T18:36:10Z'

  OutputApiKeyCollection:
    required:
      - collection
      - total_pages
      - current_page
    type: object
    properties:
      collection:
        type: array
        items:
          $ref: '#/definitions/OutputApiKey'
      total_pages:
        type: integer
        format: int64
        description: Total pages counter
      current_page:
        type: integer
        format: int64
        description: Current page number

  OutputSession:
    required:
      - id
      - token
      - name
      - device
      - device_token
      - created_at
      - updated_at
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Session ID
      token:
        type: string
        description: Session token
      name:
        type: string
        description: Session name
      device:
        type: string
        description: Session device type
        enum:
          - ios
          - android
      device_token:
        type: string
        decription: Session device push notification token
      created_at:
        type: string
        description: Created at in ISO8601 format
      updated_at:
        type: string
        description: Updated at in ISO8601 format
    example:
      id: 123
      token: 'AAkoMiLatQHMngyuUU1vnh5b'
      name: 'My Computer'
      device: 'ios'
      device_token: 'ce8be6272e43e85516033e24b4c289220eeda4879c477160b2545e95b68b5969'
      created_at: '2016-12-12T18:35:59Z'
      updated_at: '2016-12-12T18:36:10Z'

  OutputSessionWithoutToken:
    required:
      - id
      - name
      - device
      - created_at
      - updated_at
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Session ID
      name:
        type: string
        description: Session name
      device:
        type: string
        description: Session device type
        enum:
          - ios
          - android
      created_at:
        type: string
        description: Created at in ISO8601 format
      updated_at:
        type: string
        description: Updated at in ISO8601 format
    example:
      id: 123
      name: 'My Computer'
      device: 'ios'
      created_at: '2016-12-12T18:35:59Z'
      updated_at: '2016-12-12T18:36:10Z'

  OutputSessionCollection:
    required:
      - collection
      - total_pages
      - current_page
    type: object
    properties:
      collection:
        type: array
        items:
          $ref: '#/definitions/OutputSessionWithoutToken'
      total_pages:
        type: integer
        format: int64
        description: Total pages counter
      current_page:
        type: integer
        format: int64
        description: Current page number

  Error:
    type: object
    properties:
      errors:
        type: array
        items:
          type: string
          description: Error description
